/*=================================================================*/
  CREATE DATABASE "C:\Users\35989\Desktop\Diplomna\Database\FurnitureData.gdb"
             user "SYSDBA"
         password "masterkey"
         page_size=4096;
/*=================================================================*/

CREATE TABLE ITEMTYPE_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(20),
PRIMARY KEY(ID)
);


CREATE TABLE ITEM_TBL
(
ID INTEGER NOT NULL,
ITEMTYPE_ID INTEGER,
DESCRIPTION VARCHAR(100),
PRIMARY KEY(ID),
FOREIGN KEY(ITEMTYPE_ID) REFERENCES ITEMTYPE_TBL(ID) 
);


CREATE TABLE MEASURE_TBL
(
ID INTEGER NOT NULL,
NAME_M VARCHAR(20),
PRIMARY KEY(ID)
);


CREATE TABLE MATERIAL_TBL
(
ID INTEGER NOT NULL,
MEASURE_ID INTEGER,
NAME VARCHAR(30),
DESCR VARCHAR(100),
QUANTITY_ONHAND INTEGER,
PRICE_PER_PIECE NUMERIC(14,2),
PRIMARY KEY (ID),
FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE_TBL(ID)
);


CREATE TABLE COSTRATE_TBL
(
ID INTEGER NOT NULL,
ITEM_ID INTEGER,
MATERIAL_ID INTEGER,
QUANTITY INTEGER,
PRICE NUMERIC(14,2),
PRIMARY KEY(ID),
FOREIGN KEY(ITEM_ID)REFERENCES ITEM_TBL(ID),
FOREIGN KEY(MATERIAL_ID)REFERENCES MATERIAL_TBL(ID)
);


CREATE TABLE STATUS_TBL
(
ID INTEGER NOT NULL,
DESCRIPTION VARCHAR(100),
PRIMARY KEY(ID)
);


CREATE TABLE POSITION_TBL
(
ID INTEGER NOT NULL,
POSITION_NAME VARCHAR(30),
PRIMARY KEY(ID)
);


CREATE TABLE WORKER_TBL
(
ID INTEGER NOT NULL,
POSITION_ID INTEGER,
FNAME VARCHAR(20),
LNAME VARCHAR(20),
PHONE INTEGER,
PRIMARY KEY(ID),
FOREIGN KEY(POSITION_ID) REFERENCES POSITION_TBL(ID)
);



CREATE TABLE CONTRAGENT_TBL
(
ID INTEGER NOT NULL,
NAME VARCHAR(30),
BULSTAT_EGN INTEGER,
MOL VARCHAR(20),
ADDRESS VARCHAR(50),
PERCENTAGE INTEGER,
PHONE INTEGER,
PRIMARY KEY(ID)
);

CREATE TABLE ORDER_TBL
(
ID INTEGER NOT NULL,
CONTRAGENT_ID INTEGER,
STATUS_ID INTEGER,
WORKER_ID INTEGER,
NUMBER_ORDER INTEGER,
DATE_FROM DATE,
DATE_TO DATE,
DESCR_ORDER VARCHAR(200),
PERCENTAGE_ORDER INTEGER,
KAPARO NUMERIC(14,2),
PRIMARY KEY(ID),
FOREIGN KEY(CONTRAGENT_ID) REFERENCES CONTRAGENT_TBL(ID),
FOREIGN KEY(STATUS_ID) REFERENCES STATUS_TBL(ID),
FOREIGN KEY(WORKER_ID) REFERENCES WORKER_TBL(ID)
);


CREATE TABLE LISTOFITEMS_TBL
(
ID INTEGER NOT NULL,
ORDER_ID INTEGER,
ITEM_ID INTEGER,
QUANTITY INTEGER,
PRICE NUMERIC(14,2),
PRIMARY KEY(ID),
FOREIGN KEY(ORDER_ID) REFERENCES ORDER_TBL(ID),
FOREIGN KEY(ITEM_ID) REFERENCES ITEM_TBL(ID)
);


CREATE TABLE FACTURAHEAD_TBL
(
ID INTEGER NOT NULL,
CONTRAGENT_ID INTEGER,
FROM_ID INTEGER,
PROVIDER_ID INTEGER,
RECIEVED VARCHAR(30),
NUMBER_F INTEGER,
DATE_F DATE,
PRIMARY KEY(ID),
FOREIGN KEY(CONTRAGENT_ID) REFERENCES CONTRAGENT_TBL(ID),
FOREIGN KEY(FROM_ID) REFERENCES WORKER_TBL(ID),
FOREIGN KEY(PROVIDER_ID) REFERENCES CONTRAGENT_TBL(ID)
);


CREATE TABLE FACTURADATA_TBL
(
ID INTEGER NOT NULL,
FACTURAHEAD_ID INTEGER,
ITEM_ID INTEGER,
QUANTITY INTEGER,
PRICE NUMERIC(14,2),
PRIMARY KEY(ID),
FOREIGN KEY(FACTURAHEAD_ID) REFERENCES FACTURAHEAD_TBL(ID),
FOREIGN KEY(ITEM_ID) REFERENCES ITEM_TBL(ID)
);


CREATE TABLE REQUESTHEAD_TBL
(
ID INTEGER NOT NULL,
REQUEST_FROM_ID INTEGER,
STATUS_ID INTEGER,
NUMBER_R INTEGER,
DATE_R DATE,
DESCR VARCHAR(100),
PRIMARY KEY(ID),
FOREIGN KEY(REQUEST_FROM_ID) REFERENCES WORKER_TBL(ID),
FOREIGN KEY(STATUS_ID) REFERENCES STATUS_TBL(ID)
);


CREATE TABLE REQUESTDATA_TBL
(
ID INTEGER NOT NULL,
REQUESTHEAD_ID INTEGER,
PROVIDER_ID INTEGER,
MATERIAL_ID INTEGER,
QUANTITY INTEGER,
NOTE VARCHAR(100),
PRIMARY KEY(ID),
FOREIGN KEY(REQUESTHEAD_ID) REFERENCES REQUESTHEAD_TBL(ID),
FOREIGN KEY(PROVIDER_ID) REFERENCES CONTRAGENT_TBL(ID),
FOREIGN KEY(MATERIAL_ID) REFERENCES MATERIAL_TBL(ID)
);


CREATE TABLE DELIVERYHEAD_TBL
(
ID INTEGER NOT NULL,
PROVIDER_ID INTEGER,
ACCEPTED_BY_ID INTEGER,
REQUESTHEAD_ID INTEGER,
FACTURAHEAD_ID INTEGER,
NUMBER_D INTEGER,
DESCRIPTION VARCHAR(100),
DATE_D DATE,
PRIMARY KEY(ID),
FOREIGN KEY(PROVIDER_ID) REFERENCES CONTRAGENT_TBL(ID),
FOREIGN KEY(ACCEPTED_BY_ID) REFERENCES WORKER_TBL(ID),
FOREIGN KEY(REQUESTHEAD_ID) REFERENCES REQUESTHEAD_TBL(ID),
FOREIGN KEY(FACTURAHEAD_ID) REFERENCES FACTURAHEAD_TBL(ID)
);


CREATE TABLE DELIVERYDATA_TBL
(
ID INTEGER NOT NULL,
DELIVERYHEAD_ID INTEGER,
MATERIAL_ID INTEGER,
QUANTITY INTEGER,
PRICE_OF_DELIVERY NUMERIC(14,2),
PRIMARY KEY(ID),
FOREIGN KEY(DELIVERYHEAD_ID) REFERENCES DELIVERYHEAD_TBL(ID),
FOREIGN KEY(MATERIAL_ID) REFERENCES MATERIAL_TBL(ID)
);



/*GENERATORS*/

CREATE GENERATOR ITEMTYPETBL_IDGEN;
SET GENERATOR ITEMTYPETBL_IDGEN TO 0;


CREATE GENERATOR ITEMTBL_IDGEN;
SET GENERATOR ITEMTBL_IDGEN TO 0;


CREATE GENERATOR MEASURETBL_IDGEN;
SET GENERATOR MEASURETBL_IDGEN TO 0;


CREATE GENERATOR MATERIALTBL_IDGEN;
SET GENERATOR MATERIALTBL_IDGEN TO 0;


CREATE GENERATOR COSTRATETBL_IDGEN;
SET GENERATOR COSTRATETBL_IDGEN TO 0;


CREATE GENERATOR STATUSTBL_IDGEN;
SET GENERATOR STATUSTBL_IDGEN TO 0;


CREATE GENERATOR POSITIONTBL_IDGEN;
SET GENERATOR POSITIONTBL_IDGEN TO 0;


CREATE GENERATOR WORKERTBL_IDGEN;
SET GENERATOR WORKERTBL_IDGEN TO 0;


CREATE GENERATOR ORDERTBL_IDGEN;
SET GENERATOR ORDERTBL_IDGEN TO 0;


CREATE GENERATOR CONTRAGENTTBL_IDGEN;
SET GENERATOR CONTRAGENTTBL_IDGEN TO 0;


CREATE GENERATOR LISTOFITEMSTBL_IDGEN;
SET GENERATOR LISTOFITEMSTBL_IDGEN TO 0;


CREATE GENERATOR FACTURAHEADTBL_IDGEN;
SET GENERATOR FACTURAHEADTBL_IDGEN TO 0;


CREATE GENERATOR FACTURADATATBL_IDGEN;
SET GENERATOR FACTURADATATBL_IDGEN TO 0;
 
 
CREATE GENERATOR REQUESTHEADTBL_IDGEN;
SET GENERATOR REQUESTHEADTBL_IDGEN TO 0;


CREATE GENERATOR REQUESTDATATBL_IDGEN;
SET GENERATOR REQUESTDATATBL_IDGEN TO 0;


CREATE GENERATOR DELIVERYHEADTBL_IDGEN;
SET GENERATOR DELIVERYHEADTBL_IDGEN TO 0;


CREATE GENERATOR DELIVERYDATATBL_IDGEN;
SET GENERATOR DELIVERYDATATBL_IDGEN TO 0;



/*STORED PROCEDURES*/

SET TERM ^ ;

CREATE PROCEDURE ITEMTYPETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(ITEMTYPETBL_IDGEN, 1);
END^


CREATE PROCEDURE ITEMTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(ITEMTBL_IDGEN, 1);
END^


CREATE PROCEDURE MEASURETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(MEASURETBL_IDGEN, 1);
END^


CREATE PROCEDURE MATERIALTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(MATERIALTBL_IDGEN, 1);
END^


CREATE PROCEDURE COSTRATETBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(COSTRATETBL_IDGEN, 1);
END^


CREATE PROCEDURE STATUSTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(STATUSTBL_IDGEN, 1);
END^


CREATE PROCEDURE POSITION_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(POSITIONTBL_IDGEN, 1);
END^

CREATE PROCEDURE WORKERTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(WORKERTBL_IDGEN, 1);
END^


CREATE PROCEDURE ORDERTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(ORDERTBL_IDGEN, 1);
END^


CREATE PROCEDURE CONTRAGENT_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(CONTRAGENTTBL_IDGEN, 1);
END^


CREATE PROCEDURE LISTOFITEMSTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(LISTOFITEMSTBL_IDGEN, 1);
END^

CREATE PROCEDURE FACTURAHEADTBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(FACTURAHEADTBL_IDGEN, 1);
END^

CREATE PROCEDURE FACTURADATATBL_IDSP
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(FACTURADATATBL_IDGEN, 1);
END^


CREATE PROCEDURE REQUESTHEADTBL_IDSP                
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(REQUESTHEADTBL_IDGEN, 1);
END^

CREATE PROCEDURE REQUESTDATATBL_IDSP                
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(REQUESTDATATBL_IDGEN, 1);
END^


CREATE PROCEDURE DELIVERYHEADTBL_IDSP                
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(DELIVERYHEADTBL_IDGEN, 1);
END^


CREATE PROCEDURE DELIVERYDATATBL_IDSP                
RETURNS(ID INTEGER)
AS
BEGIN
ID = GEN_ID(DELIVERYDATATBL_IDGEN, 1);
END^

SET TERM ;^


/* ----------------TABLE INDEXES-------------------- */


CREATE INDEX ItemTypeNameNDX ON ITEMTYPE_TBL(NAME);
CREATE INDEX MaterialNameNDX ON MATERIAL_TBL(NAME);
CREATE INDEX MeasureTblNameNDX ON MEASURE_TBL(NAME_M);
CREATE INDEX ContragentNameNDX ON CONTRAGENT_TBL(NAME);
CREATE INDEX ContragentBulstat_EgnNDX ON CONTRAGENT_TBL(BULSTAT_EGN);
CREATE INDEX ContragentMolNDX ON CONTRAGENT_TBL(MOL);
CREATE INDEX ContragentAddressNDX ON CONTRAGENT_TBL(ADDRESS);
CREATE INDEX ContragentPercentageNDX ON CONTRAGENT_TBL(PERCENTAGE);
CREATE INDEX OrderTblDateFromNDX ON ORDER_TBL(DATE_FROM);
CREATE INDEX OrderTblDateToNDX ON ORDER_TBL(DATE_TO);
CREATE INDEX OrderTblPercentageorderNDX ON ORDER_TBL(PERCENTAGE_ORDER);
CREATE INDEX WorkerTblNameNDX ON WORKER_TBL(FNAME);
CREATE INDEX WorkerTblLnameNDX ON WORKER_TBL(LNAME);
CREATE INDEX FacturaheadnumberfNDX ON FACTURAHEAD_TBL(NUMBER_F);
CREATE INDEX FacturaheadDatefNDX ON FACTURAHEAD_TBL(DATE_F);
CREATE INDEX RequestheadTblNumberNDX ON REQUESTHEAD_TBL(NUMBER_R);
CREATE INDEX RequestheadTblDateRNDX ON REQUESTHEAD_TBL(DATE_R);
CREATE INDEX DeliveryheadTblNumberDNDX ON DELIVERYHEAD_TBL(NUMBER_D);
CREATE INDEX DeliveryheadTblDateDNDX ON DELIVERYHEAD_TBL(DATE_D);
CREATE INDEX OrderNumber ON LISTOFITEMS_TBL(ORDER_ID);



/* -----------------SQL REQUESTS  ------------------- */
SELECT * FROM CONTRAGENT_TBL CON
WHERE CON.PERCENTAGE = :PER;


SELECT*
FROM ORDER_TBL O
JOIN CONTRAGENT_TBL C ON O.CONTRAGENT_ID = C.ID
JOIN WORKER_TBL W ON O.WORKER_ID = W.ID
JOIN STATUS_TBL S ON O.STATUS_ID = S.ID


SELECT*
FROM LISTOFITEMS_TBL L
JOIN ITEM_TBL I ON L.ITEM_ID = I.ID
JOIN ITEMTYPE_TBL IT ON I.ITEMTYPE_ID = IT.ID
JOIN ORDER_TBL O ON L.ORDER_ID = O.ID


UPDATE LISTOFITEMS_TBL L
SET L.PRICE = :PRICE , L.QUANTITY = :QUANTITY
WHERE L.ID = :ID


UPDATE COSTRATE_TBL  
SET COSTRATE_TBL .PRICE= :PRICE
WHERE COSTRATE_TBL .ID = :ID


UPDATE MATERIAL_TBL  M
SET M.QUANTITY_ONHAND =:QUANTITY
WHERE M.ID = :ID


SELECT SUM(PRICE) AS TOTAL
FROM COSTRATE_TBL  C
WHERE C.ITEM_ID = :ID


DELETE FROM ORDER_TBL O
WHERE O.ID =:ID

SELECT *
FROM LISTOFITEMS_TBL L
WHERE L.ORDER_ID = :ID





